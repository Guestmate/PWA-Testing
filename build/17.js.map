{"version":3,"sources":["../../src/pages/restaurant-payment/restaurant-payment.module.ts","../../src/pages/restaurant-payment/restaurant-payment.ts"],"names":[],"mappings":"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","file":"17.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RestaurantPaymentPage } from './restaurant-payment';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    RestaurantPaymentPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RestaurantPaymentPage),\n    TranslateModule.forChild()\n  ],\n})\nexport class RestaurantPaymentPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/restaurant-payment/restaurant-payment.module.ts","import { Component, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController, Loading, AlertController, Content } from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { ToolsProvider } from '../../providers/tools/tools';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ReservationServiceProvider } from '../../providers/reservation-service/reservation-service';\nimport { StripeService, Elements, Element as StripeElement, ElementsOptions } from \"ngx-stripe\";\nimport { DeviceServiceProvider } from '../../providers/device-service/device-service';\nimport { CommonServiceProvider } from '../../providers/common-service/common-service';\nimport { RestaurantServiceProvider } from '../../providers/restaurant-service/restaurant-service';\nimport { NotificationProvider } from '../../providers/notification/notification';\n\n/**\n * Generated class for the RestaurantPaymentPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-restaurant-payment',\n  templateUrl: 'restaurant-payment.html',\n})\nexport class RestaurantPaymentPage {\n  @ViewChild(Content) content: Content;\n  loading: Loading; // for loader\n  paymentForm: FormGroup; // payment form initialise\n  cancellationTitle: any; // for cancellation title\n  acceptTerms: any; // accept terms html content\n  cancellationText: any; // cancellation html content\n  chargeText: boolean = false; // for payment type\n  item: any; //to store activity service\n  elements: Elements; // for credit card validation with stripe\n  card: StripeElement; // stripe card\n  isChecked: boolean = false; // accept terms radio check\n  lang: any = this.deviceProvider.preferredLanguage;\n  elementsOptions: ElementsOptions = {\n    locale: this.lang\n  };\n  showBackButton: boolean = true;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public formBuilder: FormBuilder, private toolsProvider: ToolsProvider, public sanitized: DomSanitizer, private reservationProvider: ReservationServiceProvider, public loadingCtrl: LoadingController, private stripeService: StripeService, private deviceProvider: DeviceServiceProvider, private alertCtrl: AlertController, private commonProvider: CommonServiceProvider, public cdRef: ChangeDetectorRef, public restaurantProvider: RestaurantServiceProvider, private notificationProvider: NotificationProvider) {\n    this.paymentForm = formBuilder.group({\n      'cardHolder': new FormControl('', [Validators.required]),\n      'acceptTermsCheck': new FormControl(null, [Validators.required])\n    });\n\n  }\n  \n  ionViewWillEnter(){\n    this.showBackButton = true;\n  }\n\n  ionViewDidLoad() {\n    this.showLoading();\n    let me = this;\n    this.item = this.navParams.get('item'); // gets item \n    // payment type check\n    if (this.item.paymentType == \"GUARANTEE\") {\n      this.chargeText = false;\n    } else {\n      this.chargeText = true;\n    }\n    // stripe implementation\n    this.stripeService.elements(this.elementsOptions)\n      .subscribe(elements => {\n        this.elements = elements;\n        // Only mount the element the first time\n        if (!this.card) {\n          this.card = this.elements.create('card', {\n            style: {\n              base: {\n                iconColor: '#666EE8',\n                color: '#31325F',\n                lineHeight: '40px',\n                fontWeight: 300,\n                fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n                fontSize: '15px',\n                '::placeholder': {\n                  color: '#CFD7E0'\n                }\n              }\n            }\n          });\n          this.card.mount('#card-element');\n        }\n      });\n\n    let reservationId = this.reservationProvider.objReservation.reservationId; //reservation id\n    //translate cancellation text and accept terms\n    let res = this.toolsProvider.fnLanguageTranslate(['view.reservation.label.CancellationTermsTitle', 'view.reservation.label.acceptTerms']);\n    res.subscribe((value: string) => {\n      this.cancellationTitle = this.sanitized.bypassSecurityTrustHtml(value['view.reservation.label.CancellationTermsTitle']);\n      this.acceptTerms = this.sanitized.bypassSecurityTrustHtml(value['view.reservation.label.acceptTerms']);\n      this.cdRef.detectChanges(); // Checks the view and its children.\n      /* click binding to termsofservice span element and redirection */\n      let termsElmnt = document.querySelector('ion-nav').querySelectorAll(\"#termsOfService\");\n      for (let i = 0; i < termsElmnt.length; i++) {\n        if (termsElmnt[i]) {\n          termsElmnt[i].addEventListener('click', function (e) {\n            me.navCtrl.push(\"TermsAndConditionsPage\", {}, { animate: true, animation: 'transition', duration: 500, direction: 'forward' });\n          });\n        }\n      }\n\n      // get cancellation policy text\n      this.commonProvider.getCancellationPolicy(reservationId).subscribe(data => {\n        this.loading.dismiss();\n        if (data.success == true) {\n          this.cancellationText = data.response;\n        }\n\n      });\n\n    });\n    this.fnCheckPreEnteredFormData();\n  }\n\n  // store entered data into model before leaving page\n  public ionViewWillLeave() {\n    if (this.commonProvider.objFormData.restaurant.bookingCompleted != true) {\n      this.commonProvider.objFormData.restaurant.cardHolder = this.paymentForm.get('cardHolder').value;\n      this.commonProvider.objFormData.restaurant.agreeTerms = this.isChecked;\n    }\n    this.showBackButton = false;\n  }\n\n  // fetch pre-entered data into fields from model\n  fnCheckPreEnteredFormData() {\n    if (this.commonProvider.objFormData && this.commonProvider.objFormData.restaurant) {\n      this.commonProvider.objFormData.restaurant.bookingCompleted = false;\n      if (this.commonProvider.objFormData.restaurant.id == this.item.id) {\n        this.paymentForm.get(\"cardHolder\").setValue(this.commonProvider.objFormData.restaurant.cardHolder);\n        this.isChecked = this.commonProvider.objFormData.restaurant.agreeTerms;\n      }\n    }\n  }\n\n  //Loader\n  public showLoading() {\n    this.loading = this.loadingCtrl.create({\n      spinner: 'crescent'\n    });\n\n    this.loading.present();\n  }\n\n  public fnSubmit() {\n\n    if (this.paymentForm.controls['cardHolder'].hasError('required')) { // if cardholder is empty\n      let validateMessage1 = this.toolsProvider.fnLanguageTranslate(['view.reservation.label.cardHolderEmpty', \"common.error\", \"buttons.ok\"]);\n\n      validateMessage1.subscribe((value: string) => {\n        let alertnew1 = this.alertCtrl.create({\n          title: value['common.error'],\n          message: value['view.reservation.label.cardHolderEmpty'],\n          cssClass: 'cls_alrt',\n          buttons: [\n            {\n              text: value['buttons.ok'],\n              role: 'cancel'\n            }]\n        });\n        alertnew1.present();\n        setTimeout(() => { alertnew1.dismiss(); }, 5000);\n      });\n    } else if (this.isChecked == false) { // if agree terms not checked\n      let validateMessage2 = this.toolsProvider.fnLanguageTranslate(['view.reservation.label.mustAgreeTerms', \"common.error\", \"buttons.ok\"]);\n\n      validateMessage2.subscribe((value: string) => {\n        let alertnew2 = this.alertCtrl.create({\n          title: value['common.error'],\n          message: value['view.reservation.label.mustAgreeTerms'],\n          cssClass: 'cls_alrt',\n          buttons: [\n            {\n              text: value['buttons.ok'],\n              role: 'cancel'\n            }]\n        });\n        alertnew2.present();\n        setTimeout(() => { alertnew2.dismiss(); }, 5000);\n      });\n    } else {\n      // service call\n      if (this.card != null && this.card != undefined) {\n        this.showLoading();\n        //create stripe token\n        this.commonProvider.objServiceForm.cardHolder = this.paymentForm.get('cardHolder').value;\n        let name = this.paymentForm.get('cardHolder').value;\n        this.stripeService.createToken(this.card, { name }).subscribe(result => {\n\n          if (result.token) {\n\n            this.commonProvider.objServiceForm.token = result.token.id;\n            this.commonProvider.objServiceForm.tokenArray = result.token;\n            this.loading.dismiss();\n            let confirmMessages = this.toolsProvider.fnLanguageTranslate(['view.reservation.confirm', \"common.confirm\", \"buttons.modify\", \"buttons.send\"]);\n\n            confirmMessages.subscribe((value: string) => {\n              let alertconfirm = this.alertCtrl.create({\n                title: value['common.confirm'],\n                message: value['view.reservation.confirm'],\n                cssClass: 'cls_alrt',\n                buttons: [\n                  {\n                    text: value['buttons.modify'],\n                    role: 'cancel',\n\n                  },\n                  {\n                    text: value['buttons.send'],\n                    role: 'cancel',\n                    handler: data => {\n                      this.showLoading();\n                      let serviceId = this.commonProvider.objServiceForm.serviceId,\n                        date = this.commonProvider.objServiceForm.date,\n                        turn = this.commonProvider.objServiceForm.turn,\n                        noOfPersons = this.commonProvider.objServiceForm.noOfPersons,\n                        comments = this.commonProvider.objServiceForm.comments,\n                        cardholder = this.paymentForm.get('cardHolder').value,\n                        token = result.token.id,\n                        reservationId = this.reservationProvider.objReservation.reservationId;\n                      // service call for reservation booking with payment\n                      this.restaurantProvider.sendServiceReservationWithPayment(reservationId, serviceId, date, turn, noOfPersons, comments, cardholder, token).subscribe(data => {\n                        this.loading.dismiss();\n                        if (data.success == true) {\n                          this.commonProvider.objFormData.restaurant = [];\n                          this.commonProvider.objFormData.restaurant.bookingCompleted = true;\n                          // success message translate\n                          let successMessages = this.toolsProvider.fnLanguageTranslate(['view.reservation.success', \"common.requestReceived\", \"buttons.ok\"]);\n\n                          successMessages.subscribe((value: string) => {\n                            let alertsuccess = this.alertCtrl.create({\n                              title: value['common.requestReceived'],\n                              message: value['view.reservation.success'],\n                              cssClass: 'cls_alrt',\n                              buttons: [\n                                {\n                                  text: value['buttons.ok'],\n                                  role: 'cancel',\n                                  handler: data => {\n                                    this.navCtrl.popTo(this.navCtrl.getByIndex(1), { animate: true, animation: 'transition', duration: 500, direction: 'back' });\n                                  }\n                                }]\n                            });\n                            alertsuccess.present();\n                            setTimeout(() => {\n                              alertsuccess.dismiss();\n                              this.navCtrl.popTo(this.navCtrl.getByIndex(1), { animate: true, animation: 'transition', duration: 500, direction: 'back' });\n                            }, 5000);\n                          });\n                        }\n\n\n                      });\n                    }\n                  }]\n              });\n              alertconfirm.present();\n              setTimeout(() => { alertconfirm.dismiss(); }, 5000);\n            });\n\n          } else if (result.error) {\n            // Error creating the token\n            console.log(result.error.message);\n            this.loading.dismiss();\n            // error message translate\n            let errorMessages = this.toolsProvider.fnLanguageTranslate([result.error.message, \"common.error\", \"buttons.ok\"]);\n\n            errorMessages.subscribe((value: string) => {\n              let alertsuccess = this.alertCtrl.create({\n                title: value['common.error'],\n                message: value[result.error.message],\n                cssClass: 'cls_alrt',\n                buttons: [\n                  {\n                    text: value['buttons.ok'],\n                    role: 'cancel',\n\n                  }]\n              });\n              alertsuccess.present();\n              setTimeout(() => { alertsuccess.dismiss(); }, 5000);\n            });\n          }\n\n        });\n\n      }\n    }\n  }\n\n  public fnOnRadioSelect($event) {\n    this.isChecked = !this.isChecked;\n  }\n\n  public fnBack() {\n    this.navCtrl.pop({ animate: true, animation: 'transition', duration: 500, direction: 'back' });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/restaurant-payment/restaurant-payment.ts"],"sourceRoot":""}